<div class="filters">
  <label for="region-select">Выберите регион:</label>
  <select id="region-select">
    <option value="все">Все регионы</option>
    {% for region in allRegions %}
      <option value="{{ region | escape }}">{{ region | escape }}</option>
    {% endfor %}
  </select>

  <label for="category-select">Выберите категорию:</label>
  <select id="category-select">
    <option value="все">Все категории</option>
    {% for category in allCategories %}
      <option value="{{ category | escape }}">{{ category | escape }}</option>
    {% endfor %}
  </select>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const profileList = document.getElementById('profile-list');
    const regionSelect = document.getElementById('region-select');
    const categorySelect = document.getElementById('category-select');
    const profiles = profileList.querySelectorAll('.profile-card');


    const normalizeString = (str) => (str || '').trim().toLowerCase();


    const createProfileCard = (profile) => {
      return `
        <div class="profile-card" data-region="${normalizeString(profile.city)}" data-category="${normalizeString(profile.category)}">
          <img
            class="profile-card__image"
            width="300"
            height="200"
            src="${profile.image_url || '/img/placeholder.webp'}"
            alt="Фото профиля ${profile.name || 'Без имени'}"
            loading="lazy"
          />
          <div class="profile-card__description">
            <h3>${profile.name || 'Без имени'}</h3>
            <p>${profile.city || 'Регион не указан'}, ${profile.category || 'Категория не указана'}</p>
            ${profile.description ? `<p>${profile.description}</p>` : ''}
            ${profile.age ? `<p>Возраст: ${profile.age}</p>` : ''}
            ${profile.email ? `<p>Email: <a href="mailto:${profile.email}">${profile.email}</a></p>` : ''}
            ${profile.phone ? `<p>Телефон: <a href="tel:${profile.phone}">${profile.phone}</a></p>` : ''}
            <a href="/profiles/${profile.id ? profile.id.replace(/[^a-z0-9-]/g, '-') : ''}/" aria-label="Подробнее о ${profile.name || 'Без имени'}">Подробнее</a>
          </div>
        </div>
      `;
    };


    let allProfiles = Array.from(profiles).map(profile => ({
      city: normalizeString(profile.dataset.region),
      category: normalizeString(profile.dataset.category),
      innerHTML: profile.outerHTML
    }));


    const newProfile = localStorage.getItem('newProfile');
    if (newProfile) {
      const profileData = JSON.parse(newProfile);
      allProfiles.unshift({
        city: normalizeString(profileData.city),
        category: normalizeString(profileData.category),
        innerHTML: createProfileCard(profileData)
      });
      localStorage.removeItem('newProfile');

    console.log('All profiles:', allProfiles);

    function filterProfiles() {
      const region = normalizeString(regionSelect.value);
      const category = normalizeString(categorySelect.value);

      console.log('Filtering with region:', region, 'category:', category);

      profileList.innerHTML = '';

      const filtered = allProfiles.filter(p => {
        const matchRegion = region === 'все' || p.city === region;
        const matchCategory = category === 'все' || p.category === category;
        return matchRegion && matchCategory;
      });

      console.log('Filtered profiles:', filtered);

      if (filtered.length === 0) {
        profileList.innerHTML = '<p>Профили не найдены.</p>';
        return;
      }

      filtered.forEach(p => {
        profileList.insertAdjacentHTML('beforeend', p.innerHTML);
      });
    }

    if (!regionSelect || !categorySelect) {
      console.error('Select elements not found');
      return;
    }

    regionSelect.addEventListener('change', () => {
      console.log('Region select changed');
      filterProfiles();
    });
    categorySelect.addEventListener('change', () => {
      console.log('Category select changed');
      filterProfiles();
    });

    filterProfiles();
  });
</script>