---
layout: base
permalink: /region/index.html

eleventyComputed:
  title: '{{site.name}} — {{site.title2}}'
  description: '{{site.description2}}'
  seo_title: '{{site.name2}} —{{site.name}}'
  seo_description: '{{site.description2}}'
  seo_og_title: '{{site.name2}} —{{site.name}}'
  seo_og_description: '{{site.description2}}'
  seo_og_image: '{{site.url}}{{site.seo_og-region}}'
  seo_og_url: '{{site.url}}/region'
  seo_twitter_title: '{{site.name2}} —{{site.name}}'
  seo_twitter_description: '{{site.description2}}'
  seo_twitter_image: '{{site.url}}{{site.seo_og-region}}'
  seo_canonical: '{{site.url}}/region'
  seo_json_ld: |
    {
      "@context": "https://schema.org",
      "@type": "WebPage",
      "name": '{{site.name2}}',
      "url": '{{site.url}}/region',
      "description": '{{site.description2}}'
    }
---

<nav class="breadcrumbs">
  <a href="/">Главная</a> ›
  <span>Регионы</span>
</nav>

<h1>Профили по регионам</h1>

<ul class="region-links">
  {% for r in allProfiles %}
    <li><a href="/region/{{ r.city }}/">{{ r.city }}</a></li>
  {% endfor %}
</ul>

<div class="profile-list" id="profile-list">
  {% for p in allProfiles %}
    <div class="profile-card" data-region="{{ p.city }}" data-category="{{ p.category }}">
      <img
        class="profile-card__image"
        width="300"
        height="200"
        src="{{ p.image_url | default: '/img/placeholder.png' }}"
        alt="Фото профиля {{ p.name }}"
      />
      <div class="profile-card__description">
        <h3>{{ p.name }}</h3>
        <p>{{ p.city }}, {{ p.category }}</p>
        <a href="/profiles/{{ p.id | slugify }}/">Подробнее</a>
      </div>
    </div>
  {% endfor %}
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const regionSelect = document.getElementById("region-select");
  const categorySelect = document.getElementById("category-select");

  function filterProfiles() {
    const activeRegion = regionSelect.value;
    const activeCategory = categorySelect.value;

    document.querySelectorAll(".profile-card").forEach(card => {
      const region = card.getAttribute("data-region");
      const category = card.getAttribute("data-category");
      card.style.display =
        (activeRegion === "все" || region === activeRegion) &&
        (activeCategory === "все" || category === activeCategory)
          ? "block" : "none";
    });
  }

  regionSelect.addEventListener("change", filterProfiles);
  categorySelect.addEventListener("change", filterProfiles);
});
</script>
